# Business Intelligence RAG Chatbot - Dependencies
# 
# QUICK START FOR CO-EDITORS:
# 1. py -m pip install -r requirements.txt
# 2. py -m uvicorn app.main:app --host 127.0.0.1 --port 8002 --reload
# 3. Open http://127.0.0.1:8002 in your browser
#
# INSTALLATION STRATEGY:
# For best results, install in tiers to avoid conflicts:
#
# Tier 1 (Essential): py -m pip install fastapi uvicorn pydantic openai tavily-python sqlalchemy aiosqlite python-dotenv
# Tier 2 (Advanced): py -m pip install langchain langchain-openai chromadb pandas
# Tier 3 (Document Processing): py -m pip install PyPDF2 python-docx python-pptx aiofiles duckduckgo-search
# Tier 4 (Optional): py -m pip install streamlit pytest black
#
# Full install: py -m pip install -r requirements.txt
# If full install fails, use tiered approach above
#
# ============================================================================

# Core web framework - Essential for API
fastapi>=0.104.0,<1.0.0
uvicorn[standard]>=0.24.0,<1.0.0
pydantic>=2.5.0,<3.0.0
python-multipart>=0.0.6

# AI and ML - Core intelligence
openai>=1.3.0,<2.0.0
tavily-python>=0.3.0,<1.0.0

# RAG and LangChain - Advanced AI features (install separately if needed)
langchain>=0.1.0,<1.0.0
langchain-openai>=0.0.2,<1.0.0
langchain-community>=0.0.10,<1.0.0

# Vector stores and embeddings - Semantic search
chromadb>=0.4.18,<2.0.0
faiss-cpu>=1.8.0,<2.0.0
numpy>=2.0.0,<3.0.0
scipy>=1.11.0,<2.0.0

# Database - Data persistence
sqlalchemy>=2.0.0,<3.0.0
alembic>=1.12.0,<2.0.0
aiosqlite>=0.19.0,<1.0.0
# PostgreSQL support (optional)
psycopg2-binary>=2.9.0,<3.0.0

# Data processing - Business intelligence
pandas>=2.2.0,<3.0.0
faker>=20.1.0,<25.0.0

# HTTP and API - External integrations  
httpx>=0.25.0,<1.0.0
requests>=2.31.0,<3.0.0

# Environment and configuration - Settings management
python-dotenv>=1.0.0,<2.0.0
pydantic-settings>=2.1.0,<3.0.0

# Testing - Quality assurance
pytest>=7.4.3,<8.0.0
pytest-asyncio>=0.21.1,<1.0.0

# Development tools - Code quality
black>=23.0.0,<25.0.0
flake8>=6.0.0,<7.0.0
mypy>=1.7.0,<2.0.0

# Frontend - User interface (optional)
streamlit>=1.28.2,<2.0.0

# Logging and monitoring - Observability
loguru>=0.7.0,<1.0.0

# File processing - Document handling (optional)
PyPDF2>=3.0.0,<4.0.0
python-docx>=1.1.0,<2.0.0
python-pptx>=1.0.0,<2.0.0
aiofiles>=24.1.0,<25.0.0
markdown>=3.9,<4.0.0
beautifulsoup4>=4.14.0,<5.0.0

# Search functionality - Web search integration
duckduckgo-search>=8.1.0,<9.0.0

# Additional document processing
XlsxWriter>=3.2.0,<4.0.0
soupsieve>=2.8,<3.0.0

# Database tools - For viewing and managing SQLite files
sqlite-utils>=3.34.0,<4.0.0

# GUI Database Viewers (install separately - not pip installable):
# DB Browser for SQLite: https://sqlitebrowser.org/
# SQLiteStudio: https://sqlitestudio.pl/
# 
# Command line database tools:
# sqlite-utils: pip install sqlite-utils
# Usage: sqlite-utils tables business_data.db
#        sqlite-utils query business_data.db "SELECT * FROM products LIMIT 5"